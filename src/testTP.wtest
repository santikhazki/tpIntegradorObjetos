import luisAlberto.*
import Cancion.*
import guitarras.*
import lunaPark.*
import trastienda.*
import presentacion.*
import musico.*
import deGrupo.*
import vocalistaPopular.*
import Albumes.*

describe "group of tests" {
	
	var laFamilia
	var cisne
	var almaDeDiamante
	var eres
	var corazonAmericano
	var crisantemo
	var presentacion1
	var presentacion2
	var joaquin
	var lucia
	var kike
	var soledad
	var especialLaFamilia
	var laSole
	var paraLosArboles
	var justCrisantemo
	               
	fixture{
		
		laFamilia = new Cancion("La Familia",264,"Quiero brindar por mi gente sencilla, por el amor brindo por la familia")
		
		cisne = new Cancion("Cisne",312,"Hoy el viento se abri� qued� vac�o el aire una vez m�s y el manantial brot�
 							y nadie est� aqu� y puedo ver que solo estallan las hojas al brillar")
 		
 		eres = new Cancion("Eres",145,"Eres lo mejor que me pas� en la vida, no tengo duda, no habr� m�s nada despu�s de ti. Eres
							lo que le dio brillo al d�a a d�a, y as� ser� por siempre, no cambiar�, hasta el final de mis d�as")
		
		corazonAmericano = new Cancion("Corazon Americano",154,"Canta coraz�n, canta m�s alto, que tu pena al fin se va marchando,
										el nuevo milenio ha de encontrarnos, junto coraz�n, como so�amos")
		
		almaDeDiamante = new Cancion("Alma de Diamante",216,"Ven a m� con tu dulce luz alma de diamante. Y aunque el sol se nuble
									despu�s sos alma de diamante. cielo o piel silencio o verdad sos alma de diamante.
									Por eso ven as� con la humanidad alma de diamante")
									
	 	crisantemo = new Cancion("Cristanemo",175,"T�came junto a esta pared, yo quede por aqu�... cuando no hubo m�s luz...
								quiero mirar a trav�s de mi piel... Crisantemo, que se abri�... encuentra el camino hacia el cielo")
		
		
		
		especialLaFamilia = new Albumes("Especial La Familia",[laFamilia],new Date(17,06,1992),100000,89000)
		
		laSole = new Albumes("La Sole",[eres,corazonAmericano],new Date(04,02,2005),200000,130000)
		
		paraLosArboles = new Albumes("Para los Arboles",[cisne, almaDeDiamante],new Date(31,03,2003),50000,49000)
		
		justCrisantemo = new Albumes("Just Crisantemo",[crisantemo],new Date(05,12,2007),28000,27500)
 		
 		
 		
 		joaquin = new DeGrupo("Pimpinela",[especialLaFamilia],20,5)
 		lucia = new VocalistaPopular("Pimpinela",[],70)
 		kike =  new Musico("",[],0)
 		soledad = new Musico("",[laSole],0)
 		luisAlberto.agregarAlbum(paraLosArboles)
 		luisAlberto.agregarAlbum(justCrisantemo)
 		
 		presentacion1 = new Presentacion(lunaPark,new Date(20,4,2017),[luisAlberto,joaquin,lucia])
 		presentacion2 = new Presentacion(trastienda,new Date(15,11,2017),[luisAlberto,joaquin,lucia])
 		
	}
	test "Joaquin canta en grupo y su habilidad es 25" {

		assert.equals(25,joaquin.habilidad())

	}
	
	test "Joaquin canta solo y su habilidad es 20" {
		
		joaquin.grupoAlQuePertenece(null)
		assert.equals(20,joaquin.habilidad())
		
		}
	
	test "Lucia canta en grupo y su habilidad es 50" {

		assert.equals(50,lucia.habilidad())

	}
	
	test "Lucia canta en el grupo Pimpinela y lanza su carrera solista, su habilidad es 70" {
		lucia.grupoAlQuePertenece("Pimpinela")
		lucia.grupoAlQuePertenece(null)
		
		assert.equals(70,lucia.habilidad())
		
		}
		
	test "Luis Alberto toca con su guitarra Fender y queremos saber su habilidad" {

		luisAlberto.modificarHabilidad(fender)
		assert.equals(80,luisAlberto.habilidad())

	}
	
	test "Luis Alberto toca con su guitarra Gibson sana y queremos saber su habilidad" {

		luisAlberto.modificarHabilidad(gibson)
		gibson.estado(true)
		assert.equals(100,luisAlberto.habilidad())

	}
	
	test "Luis Alberto toca con su guitarra Gibson rota y queremos saber su habilidad" {

		gibson.estado(false)
		luisAlberto.modificarHabilidad(gibson)
		assert.equals(40,luisAlberto.habilidad())

	}
	
	test "Queremos saber si Joaquin interpreta bien la cancion La Familia" {

		assert.notThat(joaquin.interpretaBienLaCancion(laFamilia))

	}
	
	test "Queremos saber si Joaquin interpreta bien la cancion Cisne" {

		assert.that(joaquin.interpretaBienLaCancion(cisne))

	}
	
	test "Queremos saber si Lucia interpreta bien la cancion La Familia" {

		assert.that(lucia.interpretaBienLaCancion(laFamilia,"familia"))

	}
	
	test "Queremos saber si Lucia interpreta bien la cancion Cisne" {

		assert.notThat(lucia.interpretaBienLaCancion(cisne,"familia"))

	}
	
	test "Queremos saber si Luis Alberto interpreta bien la cancion La Familia" {

		assert.that(luisAlberto.interpretaBienLaCancion(laFamilia))

	}
	
	test "Queremos saber si Luis Alberto interpreta bien la cancion Cisne" {

		assert.that(luisAlberto.interpretaBienLaCancion(cisne))

	}
	
	test "Queremos saber cuanto cobra Joaquin por la presentacion en el Luna Park"{
		
		assert.equals(50,joaquin.cuantoCobra(presentacion1))
	}
	
	test "Queremos saber cuanto cobra Joaquin presentandonse solo en la trastienda"{
		
		presentacion2.quitarUnMusico(lucia)
		presentacion2.quitarUnMusico(luisAlberto)
		assert.equals(100,joaquin.cuantoCobra(presentacion2))
	}
	
	test "Queremos saber la capacidad de la trastienda para el 5/8/17"{
		
		presentacion2.fecha(new Date(5,08,2017))
		assert.equals(700,presentacion2.capacidad())
	}
	
	test "Queremos saber la capacidad de la trastienda para el 8/8/17"{
		
		presentacion2.fecha(new Date(8,08,2017))
		assert.equals(400,presentacion2.capacidad())
	}
	
	test "Queremos saber cuanto cobra Lucia por presentarse en el Luna Park"{
		
		assert.equals(500,lucia.cuantoCobra(presentacion1)) 	
	
	}
	
	test "Queremos saber cuanto cobra Lucia por presentarse en la trastienda"{
		
		assert.equals(400,lucia.cuantoCobra(presentacion2)) 	
	
	}
	
	test "Queremos saber cuanto cobra Luis Alberto por presentarse en en Luna Park"{
		
		assert.equals(1000,luisAlberto.cuantoCobra(presentacion1)) 	
	
	}
	
	test "Queremos saber cuanto cobra Luis Alberto por presentarse en la trastienda"{
		
		assert.equals(1200,luisAlberto.cuantoCobra(presentacion2)) 	
	
	}
	
	test "Queremos saber cuanto es el costo de presentacion del Luna Park"{
		
		assert.equals(1550,presentacion1.costo()) 	
	
	}
	
	test "Queremos saber cuanto es el costo de presentacion de la trastienda"{
		
		assert.equals(1650,presentacion2.costo()) 	
	
	}
	
	//Segunda Iteracion
	
	test "Saber si la canción “Crisantemo” es corta"{
		assert.that(crisantemo.laCancionEsCorta())
	}
	
	test "Saber si la canción “Alma de diamante” es corta"{
		assert.notThat(almaDeDiamante.laCancionEsCorta())	
	}
	
	test "Saber si Soledad es minimalista" {
		assert.that(soledad.esMinimalista())
	}
	
	test "Saber si Luis Alberto es minimalista"{
		assert.notThat(luisAlberto.esMinimalista())
	}
	
	test "Saber si Joaquín es minimalista"	{
		assert.notThat(joaquin.esMinimalista())
	}
	
	test "Saber qué canciones de Luis Alberto tienen la palabra “cielo”"{
		assert.equals([almaDeDiamante,crisantemo], luisAlberto.cancionesQueTienen("cielo"))
	}
	
	test "Saber qué canciones de Luis Alberto tienen la palabra “pujante”"{
		assert.equals([],luisAlberto.cancionesQueTienen("pujante"))
	}
	
	test "Saber cuántos segundos dura la obra de Kike"{
		assert.equals(0,kike.cuantoDuraLaObra())
	}
	
	test "Saber cuántos segundos dura la obra de Soledad"{
		assert.equals(299,soledad.cuantoDuraLaObra())
	}
	
	test "Saber cuántos segundos dura la obra de Luis Alberto"{
		assert.equals(703,luisAlberto.cuantoDuraLaObra())
	}
	
	test "Saber qué canción es más larga del álbum “Para los árboles”"{
		assert.equals(almaDeDiamante,paraLosArboles.cancionConMasLetra())
	}
	
	test "Saber cuál es la canción más larga del álbum “La Sole”"{
		assert.equals(eres, laSole.cancionConMasLetra())
	}
	
	test "Queremos saber cuál es la canción más larga del álbum “Especial La Familia”"{
		assert.equals(laFamilia, especialLaFamilia.cancionConMasLetra())
	}
	
	test "Queremos saber si Luis Alberto la pegó"{
		assert.that(luisAlberto.laPego())
	}
	
	test "Queremos saber si Soledad la pegó"{
		assert.notThat(soledad.laPego())
	}
	
	test "Queremos saber si Joaquín la pegó"{
		assert.that(joaquin.laPego())
	}
}






